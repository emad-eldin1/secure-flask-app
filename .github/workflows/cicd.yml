name: CI Pipeline - Secure Flask App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-scan:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: bookstore
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=5

    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout code
        uses: actions/checkout@v5

      # 2Ô∏è‚É£ Setup Python
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.10'

      # 3Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --no-cache-dir -r requirements.txt
          pip install requests pytest checkov

      # 4Ô∏è‚É£ Run unit tests
      - name: Run tests
        run: |
          pytest tests/ --disable-warnings -v

      # 5Ô∏è‚É£ Run Gitleaks scan
      - name: Run Gitleaks scan
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source . --no-banner --exit-code 1

      # 6Ô∏è‚É£ Run Trivy file system scan
      - name: Run Trivy FS scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      # 7Ô∏è‚É£ Run Checkov scan
      - name: Run Checkov scan
        run: |
          checkov -d . --skip-path venv

      # 8Ô∏è‚É£ SonarQube analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v6
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: http://localhost:9000

      # 9Ô∏è‚É£ Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/secure-flask-app:latest .

      # üîü Push Docker image to Docker Hub
      - name: Push to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/secure-flask-app:latest


